{"version":3,"sources":["components/card/Card.js","components/deck/Deck.js","App.js","index.js"],"names":["Card","props","style","styles","card","backgroundColor","color","left","x","top","y","zIndex","z_index","transform","scale","image","src","picsum_image","alt","position","height","width","border","boxSizing","boxShadow","React","memo","Deck","state","cards","animation_in_progress","autoplay_timeout_id","autoplay_interval_id","update_selection","i","length","selection_buttons_conatiner","children","transitionDuration","new_width","autoplay_time","handle_next","last_cards_left","deck","last_cards_zIndex","last_cards_transform","setTimeout","appendChild","strat_autoplay","handle_previous","first_cards_left","first_cards_zIndex","first_cards_transform","insertBefore","clearTimeout","clearInterval","setInterval","new_cards","center","parseFloat","this","middle_card_by_index","Math","floor","total_number_of_cards","new_x","new_y","new_zIndex","new_scale","img_width_as_percentage","test","navigator","userAgent","window","screen","innerWidth","view_port","addEventListener","pow","console","log","push","colors","setState","ref","ref_id","Date","now","btnContainer","onClick","handle_selection","map","item","selection_buttons","Component","margin","padding","display","flexDirection","justifyCountent","alignItems","bottom","pointerEventes","cursor","borderRadius","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.455d9fcb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        ...styles.card,\r\n        backgroundColor: props.color,\r\n        left: `${props.x}px`,\r\n        top: `${props.y}px`,\r\n        zIndex: props.z_index,\r\n        transform: `translate(-50%, -50%) scale(${props.scale})`\r\n      }}\r\n    >\r\n      <img style={styles.image} src={props.picsum_image} alt=\"logo\"></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  card: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    height: \"200px\",\r\n    width: \"300px\",\r\n    backgroundColor: \"red\",\r\n    border: \"1px solid grey\",\r\n    boxSizing: \"border-box\"\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    boxShadow: \"10px 10px 8px black\"\r\n  }\r\n};\r\n\r\nexport default React.memo(Card);\r\n","import React, { Component } from \"react\";\r\nimport Card from \"../card/Card\";\r\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa\";\r\n\r\nclass Deck extends Component {\r\n  state = {\r\n    cards: []\r\n  };\r\n\r\n  animation_in_progress = false;\r\n  autoplay_timeout_id = null;\r\n  autoplay_interval_id = null;\r\n\r\n  componentDidMount() {\r\n    let new_cards = [];\r\n    let center = {\r\n      x: parseFloat(this.deck.style.width) / 2,\r\n      y: parseFloat(this.deck.style.height) / 2\r\n    };\r\n\r\n    let total_number_of_cards = 9;\r\n    let middle_card_by_index = Math.floor(total_number_of_cards / 2);\r\n    let new_x = 0;\r\n    let new_y = 0;\r\n    let new_zIndex = 0;\r\n    let new_scale = 1;\r\n\r\n    /***Responsive Code***/\r\n    let img_width_as_percentage = 50;\r\n    //img_width_as_percentage = window.innerWidth < 768 ? 100 : img_width_as_percentage;\r\n\r\n    this.new_width = /Android|weOS|iPhone|iPad|BlackBerry|IEMobile|Opera Mini/i.test(\r\n      navigator.userAgent\r\n    )\r\n      ? (img_width_as_percentage / 100) * window.screen.width\r\n      : (img_width_as_percentage / 100) * window.innerWidth;\r\n    this.view_port.style.width = `${this.new_width}px` || \"300px\";\r\n    this.update_selection();\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n      img_width_as_percentage = 50;\r\n\r\n      this.new_width = /Android|weOS|iPhone|iPad|BlackBerry|IEMobile|Opera Mini/i.test(\r\n        navigator.userAgent\r\n      )\r\n        ? (img_width_as_percentage / 100) * window.screen.width\r\n        : (img_width_as_percentage / 100) * window.innerWidth;\r\n      //this.view_port.style.width = `${this.new_width}px` || \"300px\";\r\n    });\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n      //left side of deck, order the cards\r\n      if (i < middle_card_by_index) {\r\n        new_x = center.x - 300 * (middle_card_by_index - i);\r\n        new_y = center.y;\r\n\r\n        //cascade the cards\r\n        new_x = new_x + 0.333 * 300 * (middle_card_by_index - i);\r\n\r\n        //z index the cards\r\n        new_zIndex = i;\r\n\r\n        //new scale the cards\r\n        new_scale = Math.pow(0.9, middle_card_by_index - i);\r\n      } else {\r\n        //right side of deck, order the cards\r\n        new_x = center.x + 300 * (i - middle_card_by_index);\r\n        new_y = center.y;\r\n\r\n        //cascade the cards\r\n        new_x = new_x - 0.333 * 300 * (i - middle_card_by_index);\r\n        console.log(new_scale);\r\n\r\n        //z index the cards\r\n        new_zIndex = i * -1.0;\r\n\r\n        //new scale the cards\r\n        new_scale = Math.pow(0.9, i - middle_card_by_index);\r\n        console.log(new_scale);\r\n      }\r\n\r\n      new_cards.push(\r\n        <Card\r\n          color={colors[i]}\r\n          x={new_x}\r\n          y={new_y}\r\n          z_index={i === middle_card_by_index ? 100 : new_zIndex}\r\n          scale={new_scale}\r\n          picsum_image={`https://picsum.photos/${300 + 20 * i}/200`}\r\n        />\r\n      );\r\n    }\r\n\r\n    this.setState({ cards: new_cards });\r\n  }\r\n\r\n  update_selection = () => {\r\n    for (let i = 0; i < this.state.cards.length; i++) {\r\n      this.selection_buttons_conatiner.children[i].transitionDuration = \"0.0s\";\r\n      this.selection_buttons_conatiner.children[i].width = `${\r\n        this.new_width * 0.05\r\n      }px`;\r\n      this.selection_buttons_conatiner.children[i].height = `${\r\n        this.new_width * 0.05\r\n      }px`;\r\n    }\r\n  };\r\n\r\n  autoplay_time = () => {};\r\n\r\n  handle_next = () => {\r\n    if (!this.animation_in_progress) {\r\n      this.animation_in_progress = true;\r\n\r\n      let last_cards_left = this.deck.children[this.deck.children.length - 1]\r\n        .style.left;\r\n      let last_cards_zIndex = this.deck.children[this.deck.children.length - 1]\r\n        .style.zIndex;\r\n      let last_cards_transform = this.deck.children[\r\n        this.deck.children.length - 1\r\n      ].style.transform;\r\n\r\n      for (let i = this.deck.children.length - 1; i > 0; i--) {\r\n        this.deck.children[i].style.transitionDuration = \"1.0s\";\r\n        this.deck.children[i].style.left = this.deck.children[i - 1].style.left;\r\n        this.deck.children[i].style.zIndex = this.deck.children[\r\n          i - 1\r\n        ].style.zIndex;\r\n        this.deck.children[i].style.transform = this.deck.children[\r\n          i - 1\r\n        ].style.transform;\r\n      }\r\n\r\n      //spacial case for first element\r\n      this.deck.children[0].style.transitionDuration = \"0.1s\";\r\n      this.deck.children[0].style.transform = \"translate(-50%, -50%) scale(0)\";\r\n\r\n      setTimeout(() => {\r\n        this.deck.children[0].style.transitionDuration = \"0.0s\";\r\n        this.deck.children[0].style.left = last_cards_left;\r\n        this.deck.children[0].style.zIndex = last_cards_zIndex;\r\n\r\n        this.deck.appendChild(this.deck.children[0]);\r\n\r\n        setTimeout(() => {\r\n          this.deck.children[\r\n            this.deck.children.length - 1\r\n          ].style.transitionDuration = \"0.1s\";\r\n          this.deck.children[\r\n            this.deck.children.length - 1\r\n          ].style.transform = last_cards_transform;\r\n\r\n          this.animation_in_progress = false;\r\n        }, 100);\r\n\r\n        this.strat_autoplay();\r\n      }, 700);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  handle_previous = () => {\r\n    if (!this.animation_in_progress) {\r\n      this.animation_in_progress = true;\r\n\r\n      let first_cards_left = this.deck.children[0].style.left;\r\n      let first_cards_zIndex = this.deck.children[0].style.zIndex;\r\n      let first_cards_transform = this.deck.children[0].style.transform;\r\n\r\n      for (let i = 0; i < this.deck.children.length - 1; i++) {\r\n        this.deck.children[i].style.transitionDuration = \"1.0s\";\r\n        this.deck.children[i].style.left = this.deck.children[i + 1].style.left;\r\n        this.deck.children[i].style.zIndex = this.deck.children[\r\n          i + 1\r\n        ].style.zIndex;\r\n        this.deck.children[i].style.transform = this.deck.children[\r\n          i + 1\r\n        ].style.transform;\r\n      }\r\n\r\n      //spacial case for last element\r\n      this.deck.children[\r\n        this.deck.children.length - 1\r\n      ].style.transitionDuration = \"0.1s\";\r\n      this.deck.children[this.deck.children.length - 1].style.transform =\r\n        \"translate(-50%, -50%) scale(0)\";\r\n\r\n      setTimeout(() => {\r\n        this.deck.children[\r\n          this.deck.children.length - 1\r\n        ].style.transitionDuration = \"0.0s\";\r\n        this.deck.children[\r\n          this.deck.children.length - 1\r\n        ].style.left = first_cards_left;\r\n        this.deck.children[\r\n          this.deck.children.length - 1\r\n        ].style.zIndex = first_cards_zIndex;\r\n\r\n        this.deck.insertBefore(\r\n          this.deck.children[this.deck.children.length - 1],\r\n          this.deck.children[0]\r\n        );\r\n\r\n        setTimeout(() => {\r\n          this.deck.children[0].style.transitionDuration = \"0.1s\";\r\n          this.deck.children[0].style.transform = first_cards_transform;\r\n\r\n          this.animation_in_progress = false;\r\n        }, 100);\r\n\r\n        this.strat_autoplay();\r\n      }, 700);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  strat_autoplay = () => {\r\n    clearTimeout(this.autoplay_timeout_id);\r\n    clearInterval(this.autoplay_interval_id);\r\n\r\n    this.autoplay_timeout_id = setTimeout(() => {\r\n      this.autoplay_interval_id = setInterval(() => {\r\n        this.handle_next();\r\n      }, 1100);\r\n    }, 1200);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div ref={(ref_id) => (this.view_port = ref_id)} style={styles.view_port}>\r\n        <div\r\n          ref={(ref_id) => (this.deck = ref_id)}\r\n          style={styles.deck}\r\n          key={Date.now()}\r\n        >\r\n          {this.state.cards}\r\n        </div>\r\n        <div style={styles.btnContainer}>\r\n          <FaAngleLeft\r\n            style={{ width: \"3rem\", height: \"2rem\" }}\r\n            onClick={this.handle_previous}\r\n          />\r\n          <FaAngleRight\r\n            style={{ width: \"3rem\", height: \"2rem\" }}\r\n            onClick={this.handle_next}\r\n          />\r\n        </div>\r\n        <div>\r\n          <div\r\n            onClick={this.handle_selection}\r\n            ref={(ref_id) => (this.selection_buttons_conatiner = ref_id)}\r\n            style={styles.selection_buttons_conatiner}\r\n          >\r\n            {this.state.cards.map((item, i) => {\r\n              return <div style={styles.selection_buttons} key={i}></div>;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  view_port: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"100%\",\r\n    height: \"300px\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyCountent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  deck: {\r\n    margin: 0,\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    height: \"250px\",\r\n    width: \"300px\",\r\n    backgroundColor: \"inherit\"\r\n  },\r\n  selection_buttons_conatiner: {\r\n    margin: \"0 auto\",\r\n    padding: \"0 1rem\",\r\n    width: \"42vmin\",\r\n    height: \"20px\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyCountent: \"center\",\r\n    alignItems: \"center\",\r\n    pointerEventes: \"none\",\r\n    zIndex: 9999,\r\n    backgroundColor: \"inherit\"\r\n  },\r\n  selection_buttons: {\r\n    margin: \"0.1rem 0.1rem\",\r\n    height: \"10px\",\r\n    width: \"10px\",\r\n    backgroundColor: \"grey\",\r\n    cursor: \"pointer\",\r\n    pointerEventes: \"all\",\r\n    borderRadius: \"50%\"\r\n  }\r\n};\r\n\r\nconst colors = [\r\n  \"white\",\r\n  \"white\",\r\n  \"white\",\r\n  \"white\",\r\n  \"white\",\r\n  \"white\",\r\n  \"white\",\r\n  \"white\",\r\n  \"white\",\r\n  \"white\"\r\n];\r\n\r\nexport default Deck;\r\n","import React, { Fragment } from \"react\";\nimport Deck from \"./components/deck/Deck\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <Fragment>\n      <Deck />\n    </Fragment>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}